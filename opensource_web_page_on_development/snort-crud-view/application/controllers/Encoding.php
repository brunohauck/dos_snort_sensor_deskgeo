<?php
/* 
 * Generated by CRUDigniter v2.3 Beta 
 * www.crudigniter.com
 */
 
class Encoding extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Encoding_model');
    } 

    /*
     * Listing of encoding
     */
    function index()
    {
        $data['encoding'] = $this->Encoding_model->get_all_encoding();

        $this->load->view('encoding/index',$data);
    }

    /*
     * Adding a new encoding
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'encoding_text' => $this->input->post('encoding_text'),
            );
            
            $encoding_id = $this->Encoding_model->add_encoding($params);
            redirect('encoding/index');
        }
        else
        {
            $this->load->view('encoding/add');
        }
    }  

    /*
     * Editing a encoding
     */
    function edit($encoding_type)
    {   
        // check if the encoding exists before trying to edit it
        $encoding = $this->Encoding_model->get_encoding($encoding_type);
        
        if(isset($encoding['encoding_type']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'encoding_text' => $this->input->post('encoding_text'),
                );

                $this->Encoding_model->update_encoding($encoding_type,$params);            
                redirect('encoding/index');
            }
            else
            {   
                $data['encoding'] = $this->Encoding_model->get_encoding($encoding_type);
    
                $this->load->view('encoding/edit',$data);
            }
        }
        else
            show_error('The encoding you are trying to edit does not exist.');
    } 

    /*
     * Deleting encoding
     */
    function remove($encoding_type)
    {
        $encoding = $this->Encoding_model->get_encoding($encoding_type);

        // check if the encoding exists before trying to delete it
        if(isset($encoding['encoding_type']))
        {
            $this->Encoding_model->delete_encoding($encoding_type);
            redirect('encoding/index');
        }
        else
            show_error('The encoding you are trying to delete does not exist.');
    }
    
}
